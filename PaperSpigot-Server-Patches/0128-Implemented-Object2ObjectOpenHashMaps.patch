From 142178692a0111bb8dbaac12250a207b7aeebd27 Mon Sep 17 00:00:00 2001
From: Admin <lockedthreaddev@gmail.com>
Date: Mon, 13 May 2019 22:40:33 -0400
Subject: [PATCH] Implemented Object2ObjectOpenHashMaps


diff --git a/src/main/java/dev/lockedthread/LockedSpigotConfig.java b/src/main/java/dev/lockedthread/LockedSpigotConfig.java
index 45f1acfb0..5026eb5d7 100644
--- a/src/main/java/dev/lockedthread/LockedSpigotConfig.java
+++ b/src/main/java/dev/lockedthread/LockedSpigotConfig.java
@@ -4,6 +4,8 @@ import com.google.common.base.Throwables;
 import dev.lockedthread.commands.CommandFPS;
 import dev.lockedthread.commands.CommandTest;
 import dev.lockedthread.locations.RenderedLocation;
+import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
+import net.minecraft.server.Explosion;
 import net.minecraft.server.MinecraftServer;
 import org.apache.commons.lang3.tuple.Pair;
 import org.bukkit.Bukkit;
@@ -15,6 +17,7 @@ import org.bukkit.configuration.file.YamlConfiguration;
 import java.io.File;
 import java.io.IOException;
 import java.util.Arrays;
+import java.util.HashMap;
 import java.util.List;
 import java.util.logging.Level;
 
@@ -97,6 +100,7 @@ public class LockedSpigotConfig {
     private static boolean explosionDestroyItems;
     private static boolean explosionBlockUpdates;
     private static boolean explosionIgnitesTNTBlocks;
+    private static boolean explosionUseObject2ObjectMapForExplosionLocations;
     private static int explosionRegionRadius;
 
     private static int fallingBlockLifeTime;
@@ -183,6 +187,7 @@ public class LockedSpigotConfig {
         explosionDestroyLava = getBoolean("explosions.destroy.lava", true);
         explosionBlockUpdates = getBoolean("explosions.block-updates", false);
         explosionIgnitesTNTBlocks = getBoolean("explosions.ignites-tnt-blocks", false);
+        explosionUseObject2ObjectMapForExplosionLocations = getBoolean("explosions.use-object-2-object-map-for-explosion-locations", true);
 
         fallingBlockLifeTime = getInt("falling-blocks.life-time", Integer.MAX_VALUE);
         fallingBlockDropItemEnabled = getBoolean("falling-blocks.drop-items.enabled", false);
@@ -213,6 +218,8 @@ public class LockedSpigotConfig {
         } catch (IOException e) {
             e.printStackTrace();
         }
+
+        Explosion.EXPLOSION_INFO_MAP = isExplosionUseObject2ObjectMapForExplosionLocations() ? new Object2ObjectOpenHashMap<>() : new HashMap<>();
     }
 
     public static void registerCommands() {
@@ -496,6 +503,10 @@ public class LockedSpigotConfig {
         return explosionIgnitesTNTBlocks;
     }
 
+    public static boolean isExplosionUseObject2ObjectMapForExplosionLocations() {
+        return explosionUseObject2ObjectMapForExplosionLocations;
+    }
+
     public static void init(File configFile) {
         System.out.println("Initializing static fields for LockedSpigot");
         LockedSpigotConfig.configFile = configFile;
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index b0c3da44d..2a766a3f4 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -16,7 +16,7 @@ import java.util.function.Predicate;
 
 public class Explosion {
 
-    public static final Map<ExplosionLocation, ExplosionInfo> EXPLOSION_INFO_MAP = new HashMap<>();
+    public static Map<ExplosionLocation, ExplosionInfo> EXPLOSION_INFO_MAP;
     //public static final Map<BlockPosition, Map<Entity, Float>> EXPLOSION_ENTITY_CACHE = new HashMap<>();
     //public static final Map<ExplosionLocation, Region> REGION_CACHE = new HashMap<>();
     private static final Predicate<Entity> ENTITY_SEARCH_PREDICATE = entity -> (!(entity instanceof EntityItem) || LockedSpigotConfig.isExplosionDestroyItems()) && (!(entity instanceof EntityHuman) || !entity.world.paperSpigotConfig.disableExplosionKnockback) && !entity.dead && IEntitySelector.d.apply(entity);
@@ -44,7 +44,7 @@ public class Explosion {
 
         final BlockPosition origin = new BlockPosition(entity.locX, entity.locY, entity.locY);
         final ExplosionLocation explosionLocation = ExplosionLocation.of(origin);
-        
+
         ExplosionInfo explosionInfo = EXPLOSION_INFO_MAP.get(explosionLocation);
         if (explosionInfo != null) {
             this.explosionInfo = explosionInfo;
-- 
2.21.0.windows.1

